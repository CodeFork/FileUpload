@{
    ViewData["Title"] = "Upload";
}

<div id="container" class="up-container">
    <img src="~/images/files-lg.svg" width="204" height="52" />
    <h1>Drag &amp; drop files here</h1>
    <p class="up-clipboard">or paste them from clipboard</p>

    <div class="up-form">
        <form id="form" action="/" method="post">
            <input id="files" type="file" multiple="multiple" style="display: none;" />
            <button id="picker">Select Files</button>
        </form>
    </div>

    <div class="up-status">

    </div>
</div>

<div class="version">@("v" + typeof(UploadOptions).Assembly.GetName().Version.ToString(3))</div>

@section Scripts {
    <script>

        var Url = '@Url.Action("Upload", "Home")';

        var Form;
        var FileInput;
        var SelectButton;
        var Status;
        var CurrentFiles = [];
        var CurrentFileIndex = -1;

        function RenderFiles() {
            var content = "";
            for (var i = 0; i < CurrentFiles.length; i++) {
                var file = CurrentFiles[i];

                content += ""
                    + "<div data-file-index='" + i + "' class='up-file'>"
                        + "<div class='up-file-name'>" + (file.customName || file.name) + "</div>"
                        + "<div class='up-file-state'>Waiting</div>"
                        + "<div class='clear'></div>"
                        + "<div class='up-file-progress'></div>"
                    + "</div>";
            }

            Status.innerHTML = content;
        }

        function UploadStep() {
            CurrentFileIndex++;
            if (CurrentFiles.length > CurrentFileIndex) {
                var progress = null;
                var state = null;
                var container = Status.querySelector("[data-file-index='" + CurrentFileIndex + "']");
                if (container != null) {
                    container.classList.add("up-file-current");
                    progress = container.querySelector(".up-file-progress");
                    state = container.querySelector(".up-file-state");
                }

                UploadFile(
                    CurrentFiles[CurrentFileIndex],
                    function (e) {
                        if (container != null) {
                            container.classList.remove("up-file-current");
                            container.classList.add("up-file-done");
                            state.innerHTML = "Done";
                        }
                        UploadStep();
                    },
                    function (code, message) {
                        if (container != null) {
                            container.classList.remove("up-file-current");
                            container.classList.add("up-file-error");
                            state.innerHTML = "Failed";
                        }
                        UploadStep();
                    },
                    function (loaded, total) {
                        var percent = 100 / total * loaded;
                        progress.style.width = percent + "%";
                        state.innerHTML = Math.floor(percent) + "%";
                    }
                );
            }
            else {
                SelectButton.removeAttribute("disabled");
                Form.reset();
            }
        }


        Container = document.getElementById("container");
        Form = document.getElementById("form");
        FileInput = document.getElementById("files");
        FileInput.addEventListener("change", function (e) {
            SelectButton.setAttribute("disabled", "disabled");

            CurrentFiles = FileInput.files;
            CurrentFileIndex = -1;
            RenderFiles();
            UploadStep();
        });

        SelectButton = document.getElementById("picker");
        SelectButton.addEventListener("click", function (e) {
            FileInput.click();
            e.preventDefault();
        });

        Container.addEventListener('drag', function (e) {
            e.preventDefault();
        });
        Container.addEventListener('dragstart', function (e) {
            e.preventDefault();
        });
        Container.addEventListener('dragend', function (e) {
            e.preventDefault();
        });
        Container.addEventListener('dragover', function (e) {
            e.preventDefault();
        });
        Container.addEventListener('dragenter', function (e) {
            e.preventDefault();
        });
        Container.addEventListener('dragleave', function (e) {
            e.preventDefault();
        });
        Container.addEventListener('drop', function (e) {
            CurrentFiles = e.dataTransfer.files;
            CurrentFileIndex = -1;
            RenderFiles();
            UploadStep();

            e.preventDefault();
        });

        Status = document.querySelector(".up-status");

        if (IsDraggableSupported()) {
            document.body.classList.add("up-draggable");
        }

        if (IsPasteSupport()) {
            document.addEventListener("paste", function (e) {
                CurrentFiles = e.clipboardData.files;
                CurrentFileIndex = -1;

                for (var i = 0; i < CurrentFiles.length; i++) {
                    var file = CurrentFiles[i];
                    var name = file.name.split(".");
                    if (name[0] == 'image') {
                        name[0] = 'file_' + (+new Date);
                        file.customName = name.join(".");
                    }
                }

                RenderFiles();
                UploadStep();

                e.preventDefault();
            });

            Container.querySelector(".up-clipboard").style.display = 'block';
        }

        Container.style.display = 'block';

    </script>
}